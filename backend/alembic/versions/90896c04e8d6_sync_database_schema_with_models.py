"""sync_database_schema_with_models

Revision ID: 90896c04e8d6
Revises: 7d6eb6277e6d
Create Date: 2025-09-30 11:31:22.247234

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "90896c04e8d6"
down_revision: Union[str, Sequence[str], None] = "7d6eb6277e6d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "llm_providers",
        "configuration",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        type_=sa.JSON(),
        existing_nullable=True,
    )
    op.alter_column(
        "note_artifacts",
        "generation_metadata",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        type_=sa.JSON(),
        existing_nullable=True,
    )
    op.alter_column(
        "notes",
        "anchor_data",
        existing_type=postgresql.JSONB(astext_type=sa.Text()),
        type_=sa.JSON(),
        existing_nullable=True,
    )
    op.alter_column("notes", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.drop_index("idx_note_page_user", table_name="notes")
    op.drop_index("idx_note_user_id", table_name="notes")
    op.create_index("idx_note_page_user", "notes", ["page_id", "user_id"], unique=False)
    op.create_index("idx_note_user_id", "notes", ["user_id"], unique=False)
    op.create_index(op.f("ix_notes_user_id"), "notes", ["user_id"], unique=False)
    op.create_foreign_key(
        None, "notes", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.alter_column("pages", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.drop_index("idx_page_site_user", table_name="pages")
    op.drop_index("idx_page_url_user", table_name="pages")
    op.drop_index("idx_page_user_id", table_name="pages")
    op.create_index("idx_page_site_user", "pages", ["site_id", "user_id"], unique=False)
    op.create_index("idx_page_url_user", "pages", ["url", "user_id"], unique=False)
    op.create_index("idx_page_user_id", "pages", ["user_id"], unique=False)
    op.create_index(op.f("ix_pages_user_id"), "pages", ["user_id"], unique=False)
    op.create_foreign_key(
        None, "pages", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_index("idx_site_domain_user", table_name="sites")
    op.alter_column("sites", "user_id", existing_type=sa.INTEGER(), nullable=False)
    op.create_index(
        "idx_site_domain_user", "sites", ["domain", "user_id"], unique=False
    )
    op.drop_index("idx_site_user_id", table_name="sites")
    op.create_index("idx_site_user_id", "sites", ["user_id"], unique=False)
    op.create_index(op.f("ix_sites_user_id"), "sites", ["user_id"], unique=False)
    op.create_foreign_key(
        None, "sites", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_index("ix_user_page_shares_id", table_name="user_page_shares")
    op.create_index(
        op.f("ix_user_page_shares_id"), "user_page_shares", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_user_page_shares_page_id"),
        "user_page_shares",
        ["page_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_page_shares_user_id"),
        "user_page_shares",
        ["user_id"],
        unique=False,
    )
    op.drop_index("ix_user_site_shares_id", table_name="user_site_shares")
    op.create_index(
        op.f("ix_user_site_shares_id"), "user_site_shares", ["id"], unique=False
    )
    op.create_index(
        op.f("ix_user_site_shares_site_id"),
        "user_site_shares",
        ["site_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_user_site_shares_user_id"),
        "user_site_shares",
        ["user_id"],
        unique=False,
    )
    op.drop_index(op.f("idx_user_chrome_id"), table_name="users")
    op.create_index("idx_user_chrome_id", "users", ["chrome_user_id"], unique=False)
    op.drop_index(op.f("idx_user_email"), table_name="users")
    op.create_index("idx_user_email", "users", ["email"], unique=False)
    op.create_index(
        op.f("ix_users_chrome_user_id"), "users", ["chrome_user_id"], unique=True
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_index(op.f("ix_users_chrome_user_id"), table_name="users")
    op.drop_index("idx_user_email", table_name="users")
    op.create_index(op.f("idx_user_email"), "users", ["email"], unique=True)
    op.drop_index("idx_user_chrome_id", table_name="users")
    op.create_index(
        op.f("idx_user_chrome_id"), "users", ["chrome_user_id"], unique=True
    )
    op.drop_index(op.f("ix_user_site_shares_user_id"), table_name="user_site_shares")
    op.drop_index(op.f("ix_user_site_shares_site_id"), table_name="user_site_shares")
    op.drop_index(op.f("ix_user_site_shares_id"), table_name="user_site_shares")
    op.drop_index(op.f("ix_user_page_shares_user_id"), table_name="user_page_shares")
    op.drop_index(op.f("ix_user_page_shares_page_id"), table_name="user_page_shares")
    op.drop_index(op.f("ix_user_page_shares_id"), table_name="user_page_shares")
    op.drop_constraint(None, "sites", type_="foreignkey")
    op.drop_index(op.f("ix_sites_user_id"), table_name="sites")
    op.drop_index("idx_site_user_id", table_name="sites")
    op.drop_index("idx_site_domain_user", table_name="sites")
    op.alter_column("sites", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_constraint(None, "pages", type_="foreignkey")
    op.drop_index(op.f("ix_pages_user_id"), table_name="pages")
    op.drop_index("idx_page_user_id", table_name="pages")
    op.drop_index("idx_page_url_user", table_name="pages")
    op.drop_index("idx_page_site_user", table_name="pages")
    op.alter_column("pages", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.drop_constraint(None, "notes", type_="foreignkey")
    op.drop_index(op.f("ix_notes_user_id"), table_name="notes")
    op.drop_index("idx_note_user_id", table_name="notes")
    op.drop_index("idx_note_page_user", table_name="notes")
    op.alter_column("notes", "user_id", existing_type=sa.INTEGER(), nullable=True)
    op.alter_column(
        "notes",
        "anchor_data",
        existing_type=sa.JSON(),
        type_=postgresql.JSONB(astext_type=sa.Text()),
        existing_nullable=True,
    )
    op.alter_column(
        "note_artifacts",
        "generation_metadata",
        existing_type=sa.JSON(),
        type_=postgresql.JSONB(astext_type=sa.Text()),
        existing_nullable=True,
    )
    op.alter_column(
        "llm_providers",
        "configuration",
        existing_type=sa.JSON(),
        type_=postgresql.JSONB(astext_type=sa.Text()),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
